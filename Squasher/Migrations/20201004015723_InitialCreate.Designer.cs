// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Squasher.Data;

namespace Squasher.Migrations
{
    [DbContext(typeof(SquasherDbContext))]
    [Migration("20201004015723_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Squasher.Models.BugModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Severity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TrackDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Bug");
                });

            modelBuilder.Entity("Squasher.Models.BugSquasherModel", b =>
                {
                    b.Property<int>("BugId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquasherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BugId", "SquasherId");

                    b.HasIndex("SquasherId");

                    b.ToTable("BugSquasherModel");
                });

            modelBuilder.Entity("Squasher.Models.ProjectModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Squasher.Models.ProjectSquasherModel", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquasherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId", "SquasherId");

                    b.HasIndex("SquasherId");

                    b.ToTable("ProjectSquasherModel");
                });

            modelBuilder.Entity("Squasher.Models.SquasherModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Squasher");
                });

            modelBuilder.Entity("Squasher.Models.BugModel", b =>
                {
                    b.HasOne("Squasher.Models.ProjectModel", "Project")
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectID");
                });

            modelBuilder.Entity("Squasher.Models.BugSquasherModel", b =>
                {
                    b.HasOne("Squasher.Models.BugModel", "Bug")
                        .WithMany("BugSquashers")
                        .HasForeignKey("BugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Squasher.Models.SquasherModel", "Squasher")
                        .WithMany("BugSquashers")
                        .HasForeignKey("SquasherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Squasher.Models.ProjectSquasherModel", b =>
                {
                    b.HasOne("Squasher.Models.ProjectModel", "Project")
                        .WithMany("ProjectSquashers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Squasher.Models.SquasherModel", "Squasher")
                        .WithMany("ProjectSquashers")
                        .HasForeignKey("SquasherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
